version: '3.8'
name: dcms
volumes:
  mysql_data:
    driver: local # Define a named volume for MySQL data persistence
  # This volume is used to store MySQL logs, if needed
  # You can remove it if you don't need to persist logs
  mysql_log:
    driver: local # Define a named volume for MySQL data persistence
  mysql_config:
    driver: local # Define a named volume for MySQL data persistence
  nginx_config:
    driver: local # Define a named volume for Nginx configuration persistence 
  # This volume is used to store Nginx logs, if needed
  # You can remove it if you don't need to persist logs
  nginx_log:
    driver: local # Define a named volume for Nginx log persistence
  eureka_log:
    driver: local # Define a named volume for Eureka log persistence
  config_log:
    driver: local # Define a named volume for Config log persistence

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001" # Expose MinIO console
  mysql:
    image: mysql:8.0.0
    container_name: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloakpass
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_log:/var/log/mysql
      - mysql_config:/etc/mysql/conf.d
    ports:
      - "3306:3306" # Expose MySQL port

  nginx:
    image: nginx:latest
    ports:
      - "9443:9443"
    volumes:
      - nginx_config:/etc/nginx/conf.d
      - nginx_log:/var/log/nginx


  eureka-server:
    image: eurekaserver:latest
    ports:
      - "8761:8761"
    environment:
      EUREKA_SERVER_PORT: 8761
      EUREKA_SERVER_HOSTNAME: eureka-server
    volumes:
      - eureka_log:/var/log/eureka


  config-server:
    image: configserver:latest
    ports:
      - "8888:8888"
    environment:
      CONFIG_SERVER_PORT: 8888  
    volumes:
      - config_log:/var/log/config-server
  # Keycloak service
  # Using a custom image with Keycloak and MySQL configuration
  auth:
    image: nguyenthaidien/keycloak:latest
    working_dir: /auth
    volumes:
      - ./auth:/auth
    ports:
      - "8080:8080"
      - "8443:8443"
    environment:
      # KC_DB: mysql
      # KC_DB_URL: jdbc:mysql://10.82.14.80:3306/keycloak
      # KC_DB_USERNAME: keycloak
      # KC_DB_PASSWORD: keycloakpass      
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: change_me
      KEYCLOAK_FRONTEND_URL: http://10.82.14.80:8080
      KEYCLOAK_HOSTNAME: keycloak
      KEYCLOAK_PORT: 8080
      KEYCLOAK_SSL_REQUIRED: external
      KEYCLOAK_LOGLEVEL: DEBUG
    depends_on:
      - mysql

  apigateway:
    image: gatewayspringcloudkeycloakoauth2:latest
    ports:
      - "9090:9090"
    environment:
      API_GATEWAY_PORT: 8082
      API_GATEWAY_HOSTNAME: apigateway



  servicedemo:
    image: servicedemoresourceserver:latest
    ports:
      - "9193:9193"
    environment:
      API_GATEWAY_PORT: 9090
      API_GATEWAY_HOSTNAME: apigateway



      
  fespa:
    image: nguyenthaidien/fespa:latest
    ports:
      - "443:443"
    environment:
      FESPA_SERVER_PORT: 443
      FESPA_SERVER_HOSTNAME: fespa      



  elasticsearch:
    image: elasticsearch:latest
    ports:
      - "9200:9200"
      - "9300:9300" # Expose Elasticsearch transport port
    environment:
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_HOSTNAME: elasticsearch

  logstash:
    image: logstash:latest
    ports:
      - "5044:5044"
      - "9600:9600" # Expose Logstash API port
    environment:
      LOGSTASH_PORT: 5044
      LOGSTASH_HOSTNAME: logstash
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"

  kibana:
    image: kibana:latest
    ports:
      - "5601:5601"
    environment:
      KIBANA_PORT: 5601
      KIBANA_HOSTNAME: kibana
